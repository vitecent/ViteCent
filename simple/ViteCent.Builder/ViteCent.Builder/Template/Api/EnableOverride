/*
 * **********************************
 * 代码由工具自动生成
 * 重新生成时，不会覆盖原有代码
 * **********************************
 */

#region 引入命名空间

// 引入$!{Table.Description}信息相关的数据参数
using $!{DataBase.Name}.$!{Setting.Data.Name}.$!{Table.CamelCaseName};

// 引入核心数据类型
using ViteCent.Core.Data;

#endregion 引入命名空间

namespace $!{DataBase.Name}.$!{Setting.Api.Name}.$!{Table.CamelCaseName};

/// <summary>
/// 启用$!{Table.Description}接口拓展
/// </summary>
/// <remarks>
/// 该部分类主要负责处理启用$!{Table.Description}信息时的自定义逻辑
/// </remarks>
public partial class $!{Setting.EnableName}$!{Table.CamelCaseName}
{
    /// <summary>
    /// 验证参数
    /// </summary>
    /// <param name="args"></param>
    /// <param name="user"></param>
    /// <returns></returns>
    private static void OverrideInvoke($!{Setting.EnableName}$!{Table.CamelCaseName}$!{Setting.Data.ArgsSuffix} args, BaseUserInfo user)
    {
#if($HasCompanyId)
        // 设置公司标识
        if (string.IsNullOrEmpty(args.CompanyId))
            args.CompanyId = user?.Company?.Id ?? string.Empty;

#end
#if($HasDepartmentId)
        // 设置部门标识
        if (string.IsNullOrEmpty(args.DepartmentId))
            args.DepartmentId = user?.Department?.Id ?? string.Empty;

#end
#if($HasPositionId)
        // 设置职位标识
        if (string.IsNullOrEmpty(args.PositionId))
            args.PositionId = user?.Position?.Id ?? string.Empty;

#end
    }
}