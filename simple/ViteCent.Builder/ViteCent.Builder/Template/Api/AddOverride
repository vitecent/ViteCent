/*
 * **********************************
 * 代码由工具自动生成
 * 重新生成时，不会覆盖原有代码
 * **********************************
 */

#region

using $!{DataBase.Name}.$!{Setting.Data.Name}.$!{Table.CamelCaseName};
#if($HasCompanyId||$HasDepartmentId||$HasPositionId)
using ViteCent.Core;
using ViteCent.Core.Enums;
#end
using ViteCent.Core.Data;

#endregion

namespace $!{DataBase.Name}.$!{Setting.Api.Name}.$!{Table.CamelCaseName};

/// <summary>
/// 新增$!{Table.Description}接口拓展
/// </summary>
public partial class $!{Setting.AddName}$!{Table.CamelCaseName}
{
    /// <summary>
    /// 验证参数
    /// </summary>
    /// <param name="args"></param>
    /// <param name="user"></param>
    /// <returns></returns>
    internal static void OverrideInvoke($!{Setting.AddName}$!{Table.CamelCaseName}$!{Setting.Data.ArgsSuffix} args, BaseUserInfo user)
    {
#if($HasCompanyId)
        if (user.IsSuper != (int)YesNoEnum.Yes)
            if (string.IsNullOrEmpty(args.CompanyId))
                args.CompanyId = user.Company.Id;

#end
#if($HasDepartmentId)
        if (user.IsSuper != (int)YesNoEnum.Yes)
            if (string.IsNullOrEmpty(args.DepartmentId))
                args.DepartmentId = user.Department.Id;

#end
#if($HasPositionId)
        if (user.IsSuper != (int)YesNoEnum.Yes)
            if (string.IsNullOrEmpty(args.PositionId))
                args.PositionId = user.Position.Id;

#end
    }
}