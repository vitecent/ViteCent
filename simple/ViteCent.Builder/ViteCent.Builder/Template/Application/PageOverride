/*
 * 代码由工具自动生成
 * 重新生成时，不会覆盖原有代码
 */

#region 引入命名空间

// 引入核心数据类型
using ViteCent.Core.Data;

// 引入$!{Table.Description}相关的数据模型
using $!{DataBase.Name}.$!{Setting.Entity.Name}.$!{Table.CamelCaseName};

#endregion 引入命名空间


namespace $!{DataBase.Name}.$!{Setting.Application.Name}.$!{Table.CamelCaseName};

/// <summary>
/// $!{Table.Description}分页应用拓展类
/// 用于处理$!{Table.Description}的分页查询，支持自定义查询条件和权限过滤
/// 通过partial类的方式实现，便于代码分离和维护
/// </summary>
public partial class $!{Setting.PageName}$!{Table.CamelCaseName}
{
    /// <summary>
    /// 重写处理方法，用于扩展$!{Table.Description}查询的自定义逻辑
    /// </summary>
    /// <param name="args">$!{Table.Description}查询参数，包含分页、排序和筛选条件</param>
    /// <param name="user">当前操作用户信息，用于权限验证和数据过滤</param>
    /// <remarks>
    /// 此方法可以实现以下功能：
    /// 1. 添加自定义的查询条件
    /// 2. 根据用户权限过滤数据
    /// 3. 处理特殊的业务规则
    /// </remarks>
    private void OverrideHandle($!{Setting.Data.SearchPrefix}$!{Table.CamelCaseName}$!{Setting.Entity.Name}$!{Setting.Data.ArgsSuffix} args, BaseUserInfo user)
    {
#if($HasCompanyId)
        // 设置公司标识
        if (user?.IsSuper != (int)YesNoEnum.Yes)
            args.AddCompanyId(user);
#end
    }
}